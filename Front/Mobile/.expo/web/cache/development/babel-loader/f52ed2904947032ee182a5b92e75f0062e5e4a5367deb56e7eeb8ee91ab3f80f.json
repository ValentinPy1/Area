{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Logo from \"../Components/Logo\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar API_URL = 'http://localhost:3000/users';\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var windowWidth = Dimensions.get('window').width;\n  var styles = getStyles(windowWidth);\n  var handleLogin = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(`${API_URL}/login`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: email.toLowerCase(),\n            password: password\n          })\n        });\n        var data = yield response.json();\n        console.log(data);\n        if (response.status === 200) {\n          yield AsyncStorage.setItem('bearer', data.bearer);\n          Alert.alert('Success', 'Login successful');\n        } else {\n          Alert.alert('Error', data.error);\n        }\n      } catch (error) {\n        Alert.alert('Error', 'Something went wrong. Please try again.');\n      }\n    });\n    return function handleLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(LinearGradient, {\n    colors: ['#6C5B7B', '#C06C84', '#F67280'],\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.logoContainer,\n      children: _jsx(Logo, {\n        color: \"#FFFFFF\"\n      })\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"TITS\"\n    }), _jsx(Text, {\n      style: styles.subtitle,\n      children: \"Task Integration & Technology System\"\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Nom d'utilisateur\",\n        placeholderTextColor: \"#FFF\",\n        onChangeText: setEmail,\n        value: email\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Mot de passe\",\n        placeholderTextColor: \"#FFF\",\n        secureTextEntry: true,\n        onChangeText: setPassword,\n        value: password\n      }), _jsx(Pressable, {\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Connect\"\n        })\n      })]\n    })]\n  });\n};\nvar getStyles = function getStyles(windowWidth) {\n  return StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      padding: 16\n    },\n    logoContainer: {\n      flexDirection: 'row',\n      alignSelf: 'center',\n      marginBottom: 20\n    },\n    title: {\n      fontSize: 30,\n      marginBottom: 20,\n      color: '#FFF',\n      textAlign: 'center',\n      fontWeight: 'bold'\n    },\n    subtitle: {\n      fontSize: 22,\n      marginBottom: 20,\n      color: '#FFF',\n      textAlign: 'center'\n    },\n    inputContainer: {\n      alignSelf: 'center',\n      width: windowWidth > 768 ? '20%' : '80%',\n      textAlign: 'center'\n    },\n    input: {\n      height: 40,\n      borderColor: '#FFF',\n      borderBottomWidth: 1,\n      marginBottom: 12,\n      paddingLeft: 8,\n      color: '#FFF',\n      textAlign: 'center'\n    },\n    button: {\n      backgroundColor: '#6C5B7B',\n      padding: 10,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 5,\n      width: '50%',\n      alignSelf: 'center'\n    },\n    buttonText: {\n      color: 'white',\n      fontSize: 16\n    }\n  });\n};\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","TextInput","Pressable","Alert","StyleSheet","Text","Dimensions","Logo","LinearGradient","jsx","_jsx","jsxs","_jsxs","API_URL","LoginScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","windowWidth","get","width","styles","getStyles","handleLogin","_ref","_asyncToGenerator","response","fetch","method","headers","body","JSON","stringify","toLowerCase","data","json","console","log","status","AsyncStorage","setItem","bearer","alert","error","apply","arguments","colors","style","container","children","logoContainer","color","title","subtitle","inputContainer","input","placeholder","placeholderTextColor","onChangeText","value","secureTextEntry","button","buttonText","create","flex","justifyContent","padding","flexDirection","alignSelf","marginBottom","fontSize","textAlign","fontWeight","height","borderColor","borderBottomWidth","paddingLeft","backgroundColor","alignItems","borderRadius"],"sources":["/home/vpy/delivery/3year/Area/Area/RNFront/Sources/Screens/LoginScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, Pressable, Alert, StyleSheet, Text, SafeAreaView, Dimensions } from 'react-native';\nimport Logo from '../Components/Logo';\nimport { LinearGradient } from 'expo-linear-gradient';\n\n    const API_URL = 'http://localhost:3000/users';\n\n    const LoginScreen: React.FC = () => {\n        const [email, setEmail] = useState<string>('');\n        const [password, setPassword] = useState<string>('');\n        const windowWidth = Dimensions.get('window').width;\n        const styles = getStyles(windowWidth);\n\n\n    const handleLogin = async () => {\n        try {\n            const response = await fetch(`${API_URL}/login`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    email: email.toLowerCase(),\n                    password,\n                }),\n            });\n\n            const data = await response.json();\n            console.log(data);\n\n            if (response.status === 200) {\n                await AsyncStorage.setItem('bearer', data.bearer);\n                Alert.alert('Success', 'Login successful');\n            } else {\n                Alert.alert('Error', data.error);\n            }\n        } catch (error) {\n            Alert.alert('Error', 'Something went wrong. Please try again.');\n        }\n    };\n\n    return (\n        <LinearGradient colors={['#6C5B7B', '#C06C84', '#F67280']} style={styles.container}>\n            <View style={styles.logoContainer} >\n                <Logo color='#FFFFFF' />\n            </View>\n            <Text style={styles.title}>TITS</Text>\n            <Text style={styles.subtitle}>Task Integration & Technology System</Text>\n            <View style={styles.inputContainer}>\n                <TextInput\n                    style={styles.input}\n                    placeholder=\"Nom d'utilisateur\"\n                    placeholderTextColor=\"#FFF\"\n                    onChangeText={setEmail}\n                    value={email}\n                />\n                <TextInput\n                    style={styles.input}\n                    placeholder=\"Mot de passe\"\n                    placeholderTextColor=\"#FFF\"\n                    secureTextEntry={true}\n                    onChangeText={setPassword}\n                    value={password}\n                />\n                {/* <Button title=\"Se connecter\" onPress={handleLogin} color=\"#6C5B7B\" /> */}\n                <Pressable style={styles.button}>\n                    <Text style={styles.buttonText}>\n                        Connect\n                    </Text>\n                </Pressable>\n            </View>\n        </LinearGradient >\n    );\n};\n\nconst getStyles = (windowWidth: number) => StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        padding: 16,\n    },\n    logoContainer: {\n        flexDirection: 'row',\n        alignSelf: 'center',\n        marginBottom: 20,\n    },\n    title: {\n        fontSize: 30,\n        marginBottom: 20,\n        color: '#FFF',\n        textAlign: 'center',\n        fontWeight: 'bold',\n    },\n    subtitle: {\n        fontSize: 22,\n        marginBottom: 20,\n        color: '#FFF',\n        textAlign: 'center',\n    },\n    inputContainer: {\n        alignSelf: 'center',\n        width: windowWidth > 768 ? '20%' : '80%',\n        textAlign: 'center',\n    },   \n    input: {\n        height: 40,\n        borderColor: '#FFF',\n        borderBottomWidth: 1,\n        marginBottom: 12,\n        paddingLeft: 8,\n        color: '#FFF',\n        textAlign: 'center',\n    },\n    button: {\n        backgroundColor: '#6C5B7B',\n        padding: 10,\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 5,\n        width: '50%',\n        // flex: 1,\n        alignSelf: 'center',\n    },\n    buttonText: {\n        color: 'white',\n        fontSize: 16,\n    },\n});\n\nexport default LoginScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}